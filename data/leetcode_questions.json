[
    {
        "id": 1,
        "title": "Two Sum",
        "description": "Given an array of integers nums and an integer target, return indices of the two numbers such that they add up to the target.",
        "function_signature": "def two_sum(nums, target):",
        "examples": [
            {
                "input": "nums = [2, 7, 11, 15], target = 9",
                "output": "[0, 1]"
            },
            {
                "input": "nums = [3, 2, 4], target = 6",
                "output": "[1, 2]"
            }
        ]
    },
    {
        "id": 2,
        "title": "Reverse String",
        "description": "Write a function that reverses a string.",
        "function_signature": "def reverse_string(s):",
        "examples": [
            {
                "input": "s = 'hello'",
                "output": "'olleh'"
            },
            {
                "input": "s = 'Python'",
                "output": "'nohtyP'"
            }
        ]
    },
    {
        "id": 3,
        "title": "Palindrome Check",
        "description": "Determine if a string is a palindrome. A palindrome reads the same backward as forward.",
        "function_signature": "def is_palindrome(s):",
        "examples": [
            {
                "input": "s = 'madam'",
                "output": "True"
            },
            {
                "input": "s = 'hello'",
                "output": "False"
            }
        ]
    },
    {
        "id": 4,
        "title": "Merge Two Sorted Lists",
        "description": "Merge two sorted linked lists into one sorted list.",
        "function_signature": "def merge_two_lists(l1, l2):",
        "examples": [
            {
                "input": "l1 = [1, 2, 4], l2 = [1, 3, 4]",
                "output": "[1, 1, 2, 3, 4, 4]"
            },
            {
                "input": "l1 = [], l2 = []",
                "output": "[]"
            }
        ]
    },
    {
        "id": 5,
        "title": "Maximum Subarray",
        "description": "Find the contiguous subarray with the largest sum.",
        "function_signature": "def max_subarray(nums):",
        "examples": [
            {
                "input": "nums = [-2, 1, -3, 4, -1, 2, 1, -5, 4]",
                "output": "6"
            },
            {
                "input": "nums = [1]",
                "output": "1"
            }
        ]
    },
    {
        "id": 6,
        "title": "Climbing Stairs",
        "description": "You are climbing a staircase. Each time you can either climb 1 or 2 steps. In how many distinct ways can you climb to the top?",
        "function_signature": "def climb_stairs(n):",
        "examples": [
            {
                "input": "n = 2",
                "output": "2"
            },
            {
                "input": "n = 3",
                "output": "3"
            }
        ]
    },
    {
        "id": 7,
        "title": "Valid Parentheses",
        "description": "Given a string containing just the characters '(', ')', '{', '}', '[' and ']', determine if the input string is valid.",
        "function_signature": "def is_valid(s):",
        "examples": [
            {
                "input": "s = '()'",
                "output": "True"
            },
            {
                "input": "s = '([)]'",
                "output": "False"
            }
        ]
    },
    {
        "id": 8,
        "title": "Search Insert Position",
        "description": "Given a sorted array and a target value, return the index if the target is found. If not, return the index where it would be if it were inserted in order.",
        "function_signature": "def search_insert(nums, target):",
        "examples": [
            {
                "input": "nums = [1, 3, 5, 6], target = 5",
                "output": "2"
            },
            {
                "input": "nums = [1, 3, 5, 6], target = 2",
                "output": "1"
            }
        ]
    },
    {
        "id": 9,
        "title": "Longest Common Prefix",
        "description": "Write a function to find the longest common prefix string amongst an array of strings.",
        "function_signature": "def longest_common_prefix(strs):",
        "examples": [
            {
                "input": "strs = ['flower', 'flow', 'flight']",
                "output": "'fl'"
            },
            {
                "input": "strs = ['dog', 'racecar', 'car']",
                "output": "''"
            }
        ]
    },
    {
        "id": 10,
        "title": "Remove Duplicates from Sorted Array",
        "description": "Remove duplicates in-place such that each element appears only once and return the new length.",
        "function_signature": "def remove_duplicates(nums):",
        "examples": [
            {
                "input": "nums = [1, 1, 2]",
                "output": "2"
            },
            {
                "input": "nums = [0, 0, 1, 1, 2, 3, 3, 4]",
                "output": "5"
            }
        ]
    },
    {
        "id": 11,
        "title": "Roman to Integer",
        "description": "Convert a Roman numeral to an integer.",
        "function_signature": "def roman_to_int(s):",
        "examples": [
            {
                "input": "s = 'III'",
                "output": "3"
            },
            {
                "input": "s = 'IX'",
                "output": "9"
            }
        ]
    },
    {
        "id": 12,
        "title": "Integer to Roman",
        "description": "Convert an integer to a Roman numeral.",
        "function_signature": "def int_to_roman(num):",
        "examples": [
            {
                "input": "num = 3",
                "output": "'III'"
            },
            {
                "input": "num = 58",
                "output": "'LVIII'"
            }
        ]
    },
    {
        "id": 13,
        "title": "Container With Most Water",
        "description": "Find two lines that together with the x-axis form a container such that it contains the most water.",
        "function_signature": "def max_area(height):",
        "examples": [
            {
                "input": "height = [1, 8, 6, 2, 5, 4, 8, 3, 7]",
                "output": "49"
            },
            {
                "input": "height = [1, 1]",
                "output": "1"
            }
        ]
    }
]
